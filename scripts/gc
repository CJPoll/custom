#!/bin/bash

# gc: Generate a git commit message using Claude Code and commit with it

# Check if there are staged changes
if ! git diff --cached --quiet; then
    # Create a temporary file for the commit message
    TEMP_FILE=$(mktemp)
    
    # Function to show spinner
    spinner() {
        local pid=$1
        local delay=0.1
        local spinstr='/-\|'
        local msg="Asking Claude Code to generate a commit message..."
        while kill -0 $pid 2>/dev/null; do
            local temp=${spinstr#?}
            printf "\r%c %s" "$spinstr" "$msg"
            spinstr=$temp${spinstr%"$temp"}
            sleep $delay
        done
        printf "\r%*s\r" $((${#msg}+3)) ""
    }
    
    # Get the commit message from Claude Code
    claude "Generate a git commit message for staged changes. Give no additional output beyond the commit message. Format according to 'conventional commits' style, providing all information in the 'conventional commit' specification which is currently available. Include credit to Claude Code as co-author. Ensure that every line is at most 80 characters." > "$TEMP_FILE" &
    CLAUDE_PID=$!
    spinner $CLAUDE_PID
    wait $CLAUDE_PID
    
    # Check if Claude Code produced output
    if [ -s "$TEMP_FILE" ]; then
        # Open the message in the editor first
        ${EDITOR:-vim} "$TEMP_FILE"
        
        # Then commit with the edited message
        git commit -F "$TEMP_FILE"
        
        # Clean up the temporary file
        rm "$TEMP_FILE"
    else
        echo "Error: Claude Code did not generate a commit message"
        rm "$TEMP_FILE"
        exit 1
    fi
else
    echo "No staged changes to commit"
    exit 1
fi
