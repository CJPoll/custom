#!/usr/bin/env bash

# Shell base script providing common functionality for bash scripts
# Provides argument parsing, validation, and execution framework

# Initialize variables
PARAMS=""

# Validate that an argument was provided and assign it to the specified variable
function validate_argument() {
    local var_name="$1"
    local var_value="$2"
    
    if [[ -z "$var_value" ]]; then
        echo "Error: Option requires an argument" >&2
        exit 1
    fi
    
    # Use eval to dynamically set the variable
    eval "$var_name=\"$var_value\""
}

# Check that all required variables are set
function check_required_variables() {
    if [[ -n "${REQUIRED_VARS[@]}" ]]; then
        for var in "${REQUIRED_VARS[@]}"; do
            if [[ -z "${!var}" ]]; then
                echo "Error: Required variable '$var' is not set" >&2
                exit 2
            fi
        done
    fi
}

# Main entry point that processes arguments and calls the script function
function main() {
    # Process all arguments
    while [[ $# -gt 0 ]]; do
        key="$1"
        
        # Check if this argument needs a value
        needs_value=false
        for arg in "${ARGUMENT_VARS[@]}"; do
            if [[ "$key" == "$arg" ]]; then
                needs_value=true
                break
            fi
        done
        
        if [[ "$needs_value" == true ]]; then
            # This argument needs a value, pass both to handle_argument
            handle_argument "$1" "$2"
            shift 2 || {
                echo "Error: $1 requires an argument" >&2
                exit 1
            }
        else
            # This argument doesn't need a value or is positional
            handle_argument "$1"
            shift
        fi
    done
    
    # Check required variables before running script
    check_required_variables
    
    # Call the script function defined by the sourcing script
    script
}