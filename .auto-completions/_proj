#compdef proj

# Get all immediate subdirectories from DEVPATH directories
_proj_get_projects() {
  local IFS=':'
  local projects=()
  
  # Split DEVPATH and iterate through each directory
  for dir in ${=DEVPATH}; do
    if [[ -d "$dir" ]]; then
      # Find immediate subdirectories (maxdepth 1)
      for project in "$dir"/*(N/); do
        projects+=(${project:t})  # :t gets the tail (basename)
      done
    fi
  done
  
  # Remove duplicates and sort
  echo ${(ou)projects}
}

# Function to complete git branch names
_git_branch_names() {
  # Get all branches (local and remote)
  local -a branches
  branches=(${(f)"$(git for-each-ref --format='%(refname:short)' refs/heads refs/remotes 2>/dev/null | grep -v HEAD | sed 's|^origin/||' | sort -u)"})
  
  _multi_parts / branches
}

_arguments \
  "1:project:($(_proj_get_projects))" \
  "--path[Explicit path to project directory]:directory:_directories" \
  "--pr-review[Open changed files in tabs for PR review]" \
  "--base-branch[Base branch for PR review]:branch:_git_branch_names"
