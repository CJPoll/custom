priority -50

snippet gs "GenServer"
	defmodule ${1:module} do
		use GenServer

		defmodule State do
			defstruct []
		end

		def start() do
			GenServer.start(__MODULE__, [])
		end

		def start_link() do
			GenServer.start_link(__MODULE__, [])
		end

		def stop(ref) do
			GenServer.stop(ref)
		end

		def init(_args) do
			{:ok, %State{}}
		end
	end
endsnippet

snippet def "def"
	def ${1:name}(${2:args}) do
		${3:contents}
	end
endsnippet

snippet handle_call "handle_call"
	def handle_call(${1:msg}, _from, %State{} = state) do
		{:noreply, state}
	end
endsnippet

snippet handle_cast "handle_cast"
	def handle_call(${1:msg}, %State{} = state) do
		{:noreply, state}
	end
endsnippet

snippet handle_info "handle_info"
	def handle_call(${1:msg}, %State{} = state) do
		{:noreply, state}
	end
endsnippet

snippet type "@type t"
	@type t :: %__MODULE__{
		${1:fields}
	}
